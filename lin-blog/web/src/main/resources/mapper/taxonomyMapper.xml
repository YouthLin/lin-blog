<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.youthlin.blog.dao.TaxonomyDao">
    <resultMap id="taxonomyMap" type="com.youthlin.blog.model.po.Taxonomy">
        <id property="taxonomyId" column="taxonomy_id"/>
        <result property="name" column="name"/>
        <result property="slug" column="slug"/>
        <result property="taxonomy" column="taxonomy"/>
        <result property="description" column="description"/>
        <result property="parent" column="parent"/>
        <result property="count" column="count"/>
    </resultMap>
    <resultMap id="relationShipMap" type="com.youthlin.blog.model.po.TaxonomyRelationships">
        <id property="id" column="ID"/>
        <result property="postId" column="post_id"/>
        <result property="taxonomyId" column="taxonomy_id"/>
    </resultMap>

    <sql id="all">
        taxonomy.taxonomy_id, name, slug, taxonomy, description, parent, `count`
    </sql>

    <insert id="save" useGeneratedKeys="true" parameterType="com.youthlin.blog.model.po.Taxonomy"
            keyProperty="optionId">
        INSERT INTO taxonomy (name, slug, taxonomy, description, parent, `count`)
        VALUES (#{name}, #{slug}, #{taxonomy}, #{description}, #{parent}, #{count})
    </insert>

    <insert id="saveList" useGeneratedKeys="true" parameterType="list" keyProperty="optionId">
        INSERT INTO taxonomy (name, slug, taxonomy, description, parent, `count`)
        VALUES
        <foreach collection="list" separator="," item="taxonomy">
            (#{taxonomy.name}, #{taxonomy.slug}, #{taxonomy.taxonomy}, #{taxonomy.description},
            #{taxonomy.parent}, #{taxonomy.count})
        </foreach>
    </insert>
    <insert id="saveTaxonomyRelationships" useGeneratedKeys="true" parameterType="list" keyProperty="ID">
        INSERT INTO taxonomy_relationships (post_id, taxonomy_id)
        VALUES
        <foreach collection="list" item="e" separator=",">
            (#{e.postId}, #{e.taxonomyId})
        </foreach>
    </insert>

    <select id="findByPostId" resultMap="taxonomyMap">
        SELECT DISTINCT
        <include refid="all"/>
        FROM taxonomy LEFT JOIN taxonomy_relationships ON taxonomy.taxonomy_id=taxonomy_relationships.taxonomy_id
        <where>
            1!=1
            <if test="array != null and array.length > 0">
                OR post_id IN
                <foreach collection="array" open="(" close=")" separator="," item="id">
                    #{id}
                </foreach>
            </if>
        </where>
    </select>

    <select id="findRelationshipsByPostId" resultMap="relationShipMap">
        SELECT
        ID,
        post_id,
        taxonomy_id
        FROM taxonomy_relationships
        <where>
            1!=1
            <if test="array != null and array.length > 0">
                OR post_id IN
                <foreach collection="array" open="(" close=")" separator="," item="id">
                    #{id}
                </foreach>
            </if>
        </where>

    </select>

    <select id="findByNameAndTaxonomy" resultMap="taxonomyMap">
        SELECT
        <include refid="all"/>
        FROM taxonomy
        WHERE name=#{name} AND taxonomy=#{taxonomy}
    </select>

    <select id="findByTaxonomy" resultMap="taxonomyMap">
        SELECT
        <include refid="all"/>
        FROM taxonomy
        WHERE taxonomy=#{taxonomy}
        ORDER BY taxonomy_id
    </select>

    <select id="findById" resultMap="taxonomyMap">
        SELECT
        <include refid="all"/>
        FROM taxonomy
        WHERE taxonomy_id=#{id}
    </select>

    <update id="update" parameterType="com.youthlin.blog.model.po.Taxonomy">
        UPDATE taxonomy
        <set>
            name=#{name},
            slug=#{slug},
            description=#{description},
            parent=#{parent},
            count=#{count}
        </set>
        WHERE taxonomy_id=#{taxonomyId}
    </update>

    <delete id="delete" parameterType="list">
        DELETE FROM taxonomy
        <where>
            1!=1
            <if test="list.size() > 0">
                OR taxonomy_id IN
                <foreach collection="list" open="(" close=")" separator="," item="id">
                    #{id}
                </foreach>
            </if>
        </where>

    </delete>

    <delete id="deleteRelationships">
        DELETE FROM taxonomy_relationships
        WHERE post_id=#{postId}
        <foreach collection="taxonomyId" open="AND taxonomy_id IN(" close=")" separator="," item="id">
            #{id}
        </foreach>
    </delete>

    <update id="resetPostCategory" parameterType="list">
        UPDATE taxonomy_relationships
        <where>
            1!=1
            <if test="list.size() > 0">
                OR taxonomy_id IN
                <foreach collection="list" open="(" close=")" separator="," item="id">
                    #{id}
                </foreach>
            </if>
        </where>
    </update>

    <select id="findBySlugAndTaxonomy" resultMap="taxonomyMap">
        SELECT
        <include refid="all"/>
        FROM taxonomy
        WHERE slug=#{slug} AND taxonomy=#{taxonomy}
    </select>

    <select id="findByPage" resultMap="taxonomyMap">
        SELECT
        <include refid="all"/>
        FROM taxonomy
        WHERE taxonomy=#{taxonomy}
    </select>

    <select id="findByTaxonomyAndNameIn" resultMap="taxonomyMap">
        SELECT
        <include refid="all"/>
        FROM taxonomy
        WHERE taxonomy=#{taxonomy} AND
        <choose>
            <when test="nameList.size() > 0">
                name IN
                <foreach collection="nameList" item="name" open="(" close=")" separator=",">
                    #{name}
                </foreach>
            </when>
            <otherwise>
                1!=1
            </otherwise>
        </choose>

    </select>


</mapper>
